<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://nodetrojan.github.io/news/article-75292.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>C++ String类的简单实现</title>
        <meta name="description" content="在之前c语言的学习中，对于字符串我们很难像整型和其他变量那样进行比较和直接的复制或者定义去运用。但在C++中为了解决这个问题提供了一种类，String类，以类型的形式对字符串进行封装，它除了作为储存字" />
        <link rel="icon" href="/assets/website/img/nodetrojan/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="NodeTrojan节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://nodetrojan.github.io/news/article-75292.htm" />
    <meta property="og:site_name" content="NodeTrojan节点订阅官网" />
    <meta property="og:title" content="C++ String类的简单实现" />
    <meta property="og:image" content="https://nodetrojan.github.io/uploads/20240904-1/a6a90a5c9f5cefca2948fa022f2f6ac9.webp" />
        <meta property="og:release_date" content="2025-03-17T09:38:15" />
    <meta property="og:updated_time" content="2025-03-17T09:38:15" />
        <meta property="og:description" content="在之前c语言的学习中，对于字符串我们很难像整型和其他变量那样进行比较和直接的复制或者定义去运用。但在C++中为了解决这个问题提供了一种类，String类，以类型的形式对字符串进行封装，它除了作为储存字" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="C++ String类的简单实现">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- Main Stylesheet -->
    <link rel="stylesheet" href="/assets/website/css/nodetrojan/style.css">
    <link rel="stylesheet" href="/assets/website/css/nodetrojan/responsive.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-PK0RCMBM8T"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-PK0RCMBM8T');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Preloader Start -->
    <div class="preloader"></div>
    <!-- Preloader End -->
    <!-- header Start -->
    <header class="header-style-two">
        <div class="header-wrapper">
            <div class="header-navigation-area two-layers-header">
                <div class="container">
                    <div class="row">
                        <div class="col-md-12">
                            <a class="navbar-brand logo f-left mrt-10 mrt-md-0" href="/">
                                                        <span>Node Trojan</span>
                                                        </a>
                            <div class="main-menu f-right">
                                <nav id="mobile-menu-right">
                                    <ul>
                                                                                <li>
                                            <a href="/">首页</a>
                                        </li>
                                                                                <li>
                                            <a href="/free-nodes/">免费节点</a>
                                        </li>
                                                                                <li>
                                            <a href="/paid-subscribe/">推荐机场</a>
                                        </li>
                                                                                <li>
                                            <a href="/client.htm">客户端</a>
                                        </li>
                                                                                <li>
                                            <a href="/news/">新闻资讯</a>
                                        </li>
                                                                            </ul>
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <!-- header End -->
    <!-- Page Title Start -->
    <section class="page-title-section">
        <div class="container">
            <div class="row">
                <div class="col-xl-12 text-center">
                    <div class="page-title-content">
                        <h1 class="title text-white">C++ String类的简单实现</h1>
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                                <li class="breadcrumb-item active" aria-current="page">正文</li>
                            </ol>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Page Title End -->
    <!-- About Section Start -->
    <section class="about-section anim-object pdt-110 pdb-50 pdb-lg-80">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <p><strong>在之前c语言的学习中，对于字符串我们很难像整型和其他变量那样进行比较和直接的复制或者定义去运用。但在C++中为了解决这个问题提供了一种类，String类，以类型的形式对字符串进行封装，它除了作为储存字符的容器外，可以对字序列的一系列操作。</strong></p> <p><strong>下面我们对String类进行简单的模拟实现：</strong></p> <pre><code>namespace wjx { 	class string 	{ 	public: 	private: 		char* _str; 	};</code></pre> <p>首先，我们定义一个自己的命名空间，来实现我们的string类，定义初始数据char*类型的_str来作为string类中的数据。</p> <pre><code>string(const char* str) 			:_str(new char[strlen(str) + 1]) 		{ 			strcpy(_str, str); 		}</code></pre> <p>我们先来实现String类中的构造函数，首先计算出所加字符串的长度，为原有数据_str开辟空间，此处+1是为了放置'\0'方便操作，开辟空间后将str通过strcpy函数复制给_str，完成构造。</p> <pre><code>string(const string&amp; s) 			:_str(new char[strlen(s._str)+1]) 		{ 			strcpy(_str, s._str); 		} ~string() 		{ 			delete[] _str; 			_str = nullptr; 		}</code></pre> <p>上述为实现string类的拷贝构造函数(深拷贝)和析构函数，一个类中如果没有定义拷贝构造函数，就会调用默认的拷贝构造函数。而拷贝构造分为深浅拷贝，下图为<span style="color:#fe2c24;">深浅拷贝</span>的底层实现：</p> <p>&nbsp;<img fetchpriority="high" decoding="async" alt="" height="409" src="http://img.555519.xyz/uploads/20230108/5861e568176d0a7e00e1e4fd86389e5b.jpg"></p> <p>&nbsp;在我们没有定义拷贝构造函数时，系统会调用默认的拷贝构造函数，string s1("hello world"),string s2(s1),如上图所示系统默认的拷贝构造函数为普通的传值拷贝，所以s1与s2指向同一块空间，但当出作用域时，调用析构函数，s1指向的空间被释放，s2则指向空，所以程序会崩溃。</p> <p style="text-align:center;"><img decoding="async" alt="" height="230" src="http://img.555519.xyz/uploads/20230108/25473469b8e98fcabed07ac3e7a994ba.jpg"></p> <p>&nbsp;但当我们使用深拷贝时，则不会出现那样的情况，因为我们在定义深拷贝函数时，会首先开辟一个与要拷贝字符串等长的空间，再将其复制过去，所以s1与s2指向的位置是不同的，析构函数释放时是互不影响的，所以这就是深浅拷贝的区别。</p> <p>下面为赋值运算符重载的方法：</p> <pre><code>string&amp; operator=(const string&amp; s) 		{ 			if (this != &amp;s) 			{ 				char* tmp = new char[strlen(s._str) + 1]; 				strcpy(tmp, s._str); 				delete[] _str; 				_str = tmp; 			} 			return *this; 		}</code></pre> <p>上述代码为赋值运算符重载，当我们调用赋值运算符重载时，需要先开辟一个空间用来复制需要拷贝的字符串，再通过释放原来的空间并用成员变量指向新的空间，从而达到赋值。注意的是if (this != &amp;s)是需要区别s1=s1时的情况的，不能自己给自己赋值。</p> <p><strong>下面为拷贝构造函数和赋值运算符函数的现代写法：</strong></p> <pre><code>string(const string&amp; s)//拷贝构造函数现代写法 			:_str(nullptr) 		{ 			string tmp(s._str); 			swap(_str, tmp._str); 		}  string&amp; operator=(const string&amp; s)//赋值运算符重载的现代写法 		{ 			 if (this != &amp;s) 			 { 				 string tmp(s); 				 swap(_str, tmp._str); 			 } 			 return *this; 		}</code></pre> <p>现代写法对于之前的传统写法来说，对于拷贝构造函数，传统方法需要申请新空间，但现代版本不需要，直接创造一个对象，因为对象被创建后，数据的底层空间已经被开辟出来了，直接可以通过交换来实现拷贝构造；而对于赋值运算符重载来说传统版本需要申请和释放空间，而新版本利用创建对象和交换函数来直接实现。</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-74617.htm">沧州的宠物医院有哪些（沧州市区宠物店）</a></p>
                                        <p>下一个：<a href="/news/article-75293.htm">猫养小猫要多长时间（小猫养多久才能生小猫）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-62482.htm" title="python读取hdfs上的parquet文件以及python访问hdfs HA的三种方法">python读取hdfs上的parquet文件以及python访问hdfs HA的三种方法</a></li>
                        <li class="py-2"><a href="/news/article-45283.htm" title="日本国内手机品牌(手机日本牌子)">日本国内手机品牌(手机日本牌子)</a></li>
                        <li class="py-2"><a href="/news/article-74617.htm" title="沧州的宠物医院有哪些（沧州市区宠物店）">沧州的宠物医院有哪些（沧州市区宠物店）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-3-free-high-speed-nodes.htm" title="2月3日→19.9M/S|2025年最新免费节点Clash/V2ray/Singbox/Trojan订阅链接地址">2月3日→19.9M/S|2025年最新免费节点Clash/V2ray/Singbox/Trojan订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-41310.htm" title="芭比堂宠物医院投诉电话（芭比堂宠物医院电话是多少）">芭比堂宠物医院投诉电话（芭比堂宠物医院电话是多少）</a></li>
                        <li class="py-2"><a href="/news/article-65534.htm" title="SpringBoot2.3应用制作Docker镜像详解">SpringBoot2.3应用制作Docker镜像详解</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-12-node-share-links.htm" title="3月12日→22.2M/S|2025年最新免费节点Clash/V2ray/Singbox/Trojan订阅链接地址">3月12日→22.2M/S|2025年最新免费节点Clash/V2ray/Singbox/Trojan订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-73274.htm" title="宠物疫苗可以空运吗现在（宠物疫苗可以空运吗现在多少钱）">宠物疫苗可以空运吗现在（宠物疫苗可以空运吗现在多少钱）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-14-free-clash-stash.htm" title="1月14日→20.9M/S|2025年最新免费节点V2ray/Clash/SSR/Shadowrocket订阅链接地址">1月14日→20.9M/S|2025年最新免费节点V2ray/Clash/SSR/Shadowrocket订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-61290.htm" title="猫三联打几针多少钱（猫三联打三针还是两针）">猫三联打几针多少钱（猫三联打三针还是两针）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">56</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">81</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">68</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- About Section End -->
        <!-- Footer Area Start -->
    <footer class="footer">
        <div class="footer-bottom-area">
            <div class="container">
                <div class="row">
                    <div class="col-xl-12">
                        <div class="text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <span class="text-light-gray">
                                NodeTrojan节点订阅官网 版权所有
                                <br />
                                Powered by WordPress
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- Footer Area End -->
    <!-- BACK TO TOP SECTION -->
    <div class="back-to-top bg-gradient-color">
        <i class="fab fa-angle-up"></i>
    </div>
    <!-- Integrated important scripts here -->
    <script src="/assets/website/js/frontend/nodetrojan/jquery.v1.12.4.min.js"></script>
    <script src="/assets/website/js/frontend/nodetrojan/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/nodetrojan/jquery-core-plugins.js"></script>
    <script src="/assets/website/js/frontend/nodetrojan/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>